#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã mastery –≤ Ayaal Teacher.

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –æ—Ç –æ—Ç–≤–µ—Ç–∞ —É—á–µ–Ω–∏–∫–∞ –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
"""

import json
from mastery_calculator import (
    MasteryCalculatorV2,
    calculate_lesson_mastery_v2,
    update_learning_mastery_v2,
    next_lesson_recommendation_v2,
    get_mastery_description
)


def simulate_student_progress():
    """–°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—á–µ–Ω–∏–∫–∞ –ø–æ –º–æ–¥—É–ª—é –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏."""
    print("üéì –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—á–µ–Ω–∏–∫–∞ –ø–æ –º–æ–¥—É–ª—é '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ - –ß–∏—Å–ª–∞'\n")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    current_mastery = {
        'overall': 0.0,
        'concept': 0.0,
        'guided': 0.0,
        'independent': 0.0,
        'assessment': 0.0,
        'last_updated': '2024-01-01T09:00:00Z',
        'total_submissions': 0
    }

    # –°–∏–º—É–ª—è—Ü–∏—è —É—Ä–æ–∫–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ —É—á–µ–Ω–∏–∫–∞
    lessons_scenario = [
        {
            'lesson_type': 'concept',
            'lesson_name': '–ß—Ç–æ —Ç–∞–∫–æ–µ —á–∏—Å–ª–∞?',
            'time_spent': 180,  # 3 –º–∏–Ω—É—Ç—ã
            'score': 0.85,      # –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            'difficulty': 'easy',
            'description': '–£—á–µ–Ω–∏–∫ –±—ã—Å—Ç—Ä–æ –ø–æ–Ω—è–ª –æ—Å–Ω–æ–≤—ã'
        },
        {
            'lesson_type': 'guided',
            'lesson_name': '–°–ª–æ–∂–µ–Ω–∏–µ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã—Ö —á–∏—Å–µ–ª',
            'time_spent': 420,  # 7 –º–∏–Ω—É—Ç
            'score': 0.75,      # –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            'difficulty': 'medium',
            'description': '–ù–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è'
        },
        {
            'lesson_type': 'guided',
            'lesson_name': '–í—ã—á–∏—Ç–∞–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 10',
            'time_spent': 600,  # 10 –º–∏–Ω—É—Ç
            'score': 0.65,      # –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            'difficulty': 'medium',
            'description': '–ë—ã–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏'
        },
        {
            'lesson_type': 'independent',
            'lesson_name': '–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤',
            'time_spent': 480,  # 8 –º–∏–Ω—É—Ç
            'score': 0.80,      # –û—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            'difficulty': 'medium',
            'description': '–£—á–µ–Ω–∏–∫ —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!'
        }
    ]

    # –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ (–ø—É—Å—Ç–∞—è –≤ –Ω–∞—á–∞–ª–µ)
    submissions_history = []

    for i, lesson in enumerate(lessons_scenario, 1):
        print(f"üìö –£—Ä–æ–∫ {i}: {lesson['lesson_name']}")
        print(f"   –¢–∏–ø: {lesson['lesson_type']}")
        print(f"   –í—Ä–µ–º—è: {lesson['time_spent']} —Å–µ–∫ ({lesson['time_spent']//60} –º–∏–Ω)")
        print(f"   –û—Ü–µ–Ω–∫–∞: {lesson['score']:.0%}")
        print(f"   –°–ª–æ–∂–Ω–æ—Å—Ç—å: {lesson['difficulty']}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {lesson['description']}")

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º mastery –¥–ª—è —ç—Ç–æ–≥–æ —É—Ä–æ–∫–∞
        lesson_mastery, diagnostics = calculate_lesson_mastery_v2(
            submissions_history,
            lesson['lesson_type'],
            lesson['time_spent'],
            lesson['score'],
            lesson['difficulty']
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ mastery
        current_mastery = update_learning_mastery_v2(
            current_mastery,
            lesson['lesson_type'],
            lesson_mastery,
            len(submissions_history) + 1
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
        submissions_history.append({
            'score': lesson['score'],
            'created_at': f'2024-01-{i:02d}T10:00:00Z',
            'lesson_type': lesson['lesson_type']
        })

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —É—Ä–æ–∫
        next_lesson, recommendation_reason = next_lesson_recommendation_v2(current_mastery, {}, {})

        # –û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        mastery_desc = get_mastery_description(current_mastery['overall'])

        print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        print(f"   Mastery —É—Ä–æ–∫–∞: {lesson_mastery:.3f}")
        print(f"   –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: —Ç–æ—á–Ω–æ—Å—Ç—å={diagnostics['accuracy']:.2f}, —Å–∫–æ—Ä–æ—Å—Ç—å={diagnostics['speed']:.2f}, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å={diagnostics['consistency']:.2f}")
        print(f"   –û–±—â–∏–π mastery: {current_mastery['overall']:.3f} ({mastery_desc})")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫: {next_lesson}")
        print(f"   –ü—Ä–∏—á–∏–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {recommendation_reason}")
        print(f"   –î–µ—Ç–∞–ª–∏ –ø–æ —Ç–∏–ø–∞–º: Concept: {current_mastery['concept']:.2f}, Guided: {current_mastery['guided']:.2f}, Independent: {current_mastery['independent']:.2f}")
        print("   ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
        print()


def show_mastery_levels():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É—Ä–æ–≤–Ω–∏ mastery —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏."""
    print("üèÜ –£—Ä–æ–≤–Ω–∏ –æ—Å–≤–æ–µ–Ω–∏—è (Mastery Levels):\n")

    test_scores = [0.1, 0.3, 0.5, 0.7, 0.85, 0.95]

    for score in test_scores:
        description = get_mastery_description(score)
        level = "üî¥ –ù–∞—á–∏–Ω–∞—é—â–∏–π" if score < 0.4 else "üü° –ù–æ–≤–∏—á–æ–∫" if score < 0.6 else "üü¢ –°—Ä–µ–¥–Ω–∏–π" if score < 0.8 else "üîµ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π" if score < 0.9 else "üèÜ –ú–∞—Å—Ç–µ—Ä"
        print(f"   {score:.1f} - {description} ({level})")

    print()


def demonstrate_adaptive_learning():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è."""
    print("üß† –ê–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ - –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è:\n")

    scenarios = [
        {
            'student_type': '–ë—ã—Å—Ç—Ä—ã–π —É—á–µ–Ω–∏–∫',
            'mastery': {'overall': 0.9, 'concept': 0.95, 'guided': 0.9, 'independent': 0.85},
            'description': '–£—á–µ–Ω–∏–∫ –±—ã—Å—Ç—Ä–æ —Å—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª'
        },
        {
            'student_type': '–ù—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ',
            'mastery': {'overall': 0.4, 'concept': 0.6, 'guided': 0.3, 'independent': 0.2},
            'description': '–£—á–µ–Ω–∏–∫—É –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å'
        },
        {
            'student_type': '–°–º–µ—à–∞–Ω–Ω—ã–π —Ç–∏–ø',
            'mastery': {'overall': 0.7, 'concept': 0.9, 'guided': 0.8, 'independent': 0.5},
            'description': '–¢–µ–æ—Ä–∏—é –ø–æ–Ω–∏–º–∞–µ—Ç, –Ω–æ –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏'
        }
    ]

    for scenario in scenarios:
        next_lesson, reason = next_lesson_recommendation_v2(scenario['mastery'], {}, {})
        mastery_desc = get_mastery_description(scenario['mastery']['overall'])

        print(f"üë§ {scenario['student_type']}:")
        print(f"   –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {scenario['mastery']['overall']:.1f} ({mastery_desc})")
        print(f"   –°–∏—Ç—É–∞—Ü–∏—è: {scenario['description']}")
        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {next_lesson} —É—Ä–æ–∫")
        print(f"   –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        print()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è."""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã Mastery –≤ Ayaal Teacher\n")
    print("=" * 60)

    show_mastery_levels()
    simulate_student_progress()
    demonstrate_adaptive_learning()

    print("üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüí° –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:")
    print("   ‚Ä¢ –ú–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç (—Ç–æ—á–Ω–æ—Å—Ç—å, —Å–∫–æ—Ä–æ—Å—Ç—å, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —Å–ª–æ–∂–Ω–æ—Å—Ç—å)")
    print("   ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–∫–∞")
    print("   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ —Ç–∏–ø–∞–º —É—Ä–æ–∫–æ–≤")
    print("   ‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è")
    print("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")


if __name__ == "__main__":
    main()
